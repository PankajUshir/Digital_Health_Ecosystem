{"ast":null,"code":"var _jsxFileName = \"I:\\\\C-DAC\\\\Final Project\\\\Digital_Health_Ecosystem_CDAC\\\\reacttemplate\\\\src\\\\ambulance\\\\AmbulanceRegisForm2.js\",\n    _s = $RefreshSig$();\n\nimport { useReducer } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst init = {\n  // for loginAll table\n  uname: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  password: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  role: \"Ambulance\",\n  drivername: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  aregno: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  avehicalno: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  email: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  mono: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  website: \"\",\n  state: \"\",\n  city: \"\",\n  pincode: {\n    value: \"\",\n    hasError: true,\n    touched: false,\n    error: \"\"\n  },\n  landmark: \"\",\n  availablestatus: 1,\n  ac_status: 1\n};\n\nconst validateData = (name, value) => {\n  let hasError = false,\n      error = \"\";\n\n  switch (name) {\n    case \"uname\":\n      let regex1 = /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,8}[a-zA-Z0-9]$/;\n\n      if (!regex1.test(value)) {\n        hasError = true;\n        error = \"Small, Capital letter and Numbers len-10 allowd \";\n      }\n\n      break;\n\n    case \"password\":\n      let regex2 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n\n      if (!regex2.test(value)) {\n        hasError = true;\n        error = \"len 6 one Upper & smaller char one number & special symbol \";\n      }\n\n      break;\n\n    case \"drivername\":\n      let regex3 = /^([A-Z][a-zA-Z]*)/;\n\n      if (!regex3.test(value)) {\n        hasError = true;\n        error = \"first alphabate capital, First name and Last name \";\n      }\n\n      break;\n\n    case \"aregno\":\n      let regex4 = /^[A-Z][A-Z,0-9]{10}$/;\n\n      if (!regex4.test(value)) {\n        hasError = true;\n        error = \"Only capitals alphabets and number 10 length \";\n      }\n\n      break;\n\n    case \"avehicalno\":\n      let regex5 = /^[A-Z]{2}[ -][0-9]{1,2}(?: [A-Z])?(?: [A-Z]*)? [0-9]{4}$/;\n\n      if (!regex5.test(value)) {\n        hasError = true;\n        error = \"Only Capital letter and numbers & spaces \";\n      }\n\n      break;\n\n    case \"mono\":\n      let regex6 = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/;\n\n      if (!regex6.test(value)) {\n        hasError = true;\n        error = \"10 digit only\";\n      }\n\n      break;\n\n    case \"pincode\":\n      let regex7 = /^[0-9]{6}$/;\n\n      if (!regex7.test(value)) {\n        hasError = true;\n        error = \"len 6 digit  \";\n      }\n\n      break;\n\n    case \"email\":\n      let regex8 = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n\n      if (!regex8.test(value)) {\n        hasError = true;\n        error = \"Enter correct email!!  \";\n      }\n\n      break;\n  }\n\n  return {\n    hasError,\n    error\n  };\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'update':\n      const {\n        name,\n        value,\n        hasError,\n        error,\n        touched,\n        isFormValid\n      } = action.data;\n      return { // ...state, [action.field]: action.val\n        ...state,\n        [name]: { ...state[name],\n          value,\n          hasError,\n          error,\n          touched\n        },\n        isFormValid\n      };\n\n    case 'clear':\n      return init;\n  }\n}; //end==========================================\n// export default function AmbulanceRegisForm1()\n\n\nlet Reactusereducer = () => {\n  _s();\n\n  // const [ambulancesignup, dispatch] = useReducer(reducer, init);\n  //strt=============================\n  const [state, dispatch] = useReducer(reducer, init); // const [msg,setMsg] = useState(\"\");\n\n  let navigate = useNavigate(); //on change event\n\n  const onInputChange = (name, value, dispatch) => {\n    //validation logic\n    const {\n      hasError,\n      error\n    } = validateData(name, value); //form field, latest value\n    //which key to be modified - value, hasError, error, touched \n\n    let isFormValid = true;\n\n    for (const key in state) {\n      let item = state[key];\n      /*if(key === name && hasError)\r\n      {\r\n          isFormValid = false;\r\n          break;\r\n      }\r\n      else if(key !== name && item.hasError)\r\n      {\r\n          isFormValid = false;\r\n          break;\r\n      }*/\n\n      if (item.hasError) {\n        isFormValid = false;\n        break;\n      }\n    } //gethered one more value - isFormValid\n    //dispatch({type:'update',data:{name,value,hasError,error,touched: true, isFormValid}})\n    //sending action object\n\n\n    dispatch({\n      type: 'update',\n      data: {\n        name,\n        value,\n        hasError,\n        error,\n        touched: true,\n        isFormValid\n      }\n    });\n  };\n\n  const onFocusOut = (name, value, dispatch) => {\n    const {\n      hasError,\n      error\n    } = validateData(name, value);\n    let isFormValid = true;\n\n    for (const key in state) {\n      const item = state[key];\n\n      if (key === name && hasError) {\n        isFormValid = false;\n        break;\n      } else if (key !== name && item.hasError) {\n        isFormValid = false;\n        break;\n      }\n    }\n\n    dispatch({\n      type: \"update\",\n      data: {\n        name,\n        value,\n        hasError,\n        error,\n        touched: true,\n        isFormValid\n      }\n    });\n  }; //end=====================================\n  //when click on butoon this fun get called\n  // const hancelClick = (e) => {\n\n\n  const sendData = e => {\n    e.preventDefault(); // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\n    // state,city,pincode,landmark,availablestatus,ac_status}\n\n    console.log(\"hi\");\n    console.log(state);\n    console.log(\"hi\");\n    fetch(\"http://localhost:8080/ambulancesignup\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        uname: state.uname.value,\n        password: state.password.value,\n        role: \"Ambulance\",\n        drivername: state.drivername.value,\n        aregno: state.aregno.value,\n        avehicalno: state.avehicalno.value,\n        email: state.email.value,\n        mono: state.mono.value,\n        website: state.website.value,\n        state: state.state.value,\n        city: state.city.value,\n        pincode: state.pincode.value,\n        landmark: state.landmark.value,\n        availablestatus: 1,\n        ac_status: 1\n      })\n    }) // .then(() => { console.log(\"Ambulance registerd Sucessfully \") })\n    .then(res => {\n      if (res) {\n        if (res.status == 200) {\n          // console.log(\"Success\");\n          alert(\"Register/SignUp Sucessfully!!!\");\n          navigate('/login');\n        } else {\n          // console.log(\"fail\");\n          alert(\"Register Fail--------\");\n        }\n      }\n    });\n  }; //return method will return html to browser\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container-fluid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar navbar-expand-xl navbar-dark\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"navbar-nav\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item active\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link active \",\n              href: \"#\",\n              style: {\n                fontSize: \"19px\"\n              },\n              children: \"Digital Health Ecosystem\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 2\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"nav-item active\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"nav-link\",\n              href: \"/\",\n              children: \"Home\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 1\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"formInput container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"signup-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"form-title\",\n          children: \"Ambulance Register Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"uname\",\n            value: state.uname.value,\n            onChange: e => {\n              onInputChange(\"uname\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"empno\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.uname.touched && state.uname.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.uname.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            className: \"form-control\",\n            name: \"password\",\n            value: state.password.value,\n            onChange: e => {\n              onInputChange(\"password\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"password\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.password.touched && state.password.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.password.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Driver Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"drivername\",\n            value: state.drivername.value,\n            onChange: e => {\n              onInputChange(\"drivername\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"drivername\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.drivername.touched && state.drivername.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.drivername.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Ambulance Registration Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"aregno\",\n            value: state.aregno.value,\n            onChange: e => {\n              onInputChange(\"aregno\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"aregno\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.aregno.touched && state.aregno.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.aregno.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Ambulance (Vehical) Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"avehicalno\",\n            value: state.avehicalno.value,\n            onChange: e => {\n              onInputChange(\"avehicalno\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"avehicalno\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.avehicalno.touched && state.avehicalno.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.avehicalno.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 326,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Your Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 337,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            className: \"form-control\",\n            name: \"email\",\n            value: state.email.value,\n            onChange: e => {\n              onInputChange(\"email\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"email\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.email.touched && state.email.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.email.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Your Mobile Number\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"mono\",\n            value: state.mono.value,\n            onChange: e => {\n              onInputChange(\"mono\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"mono\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.mono.touched && state.mono.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.mono.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Your Website (If having)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"website\",\n            value: state.website.value,\n            onChange: e => {\n              onInputChange(\"website\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 358,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter State\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"state\",\n            value: state.state.value,\n            onChange: e => {\n              onInputChange(\"state\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter City\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"city\",\n            value: state.city.value,\n            onChange: e => {\n              onInputChange(\"city\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 377,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter Pincode\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control\",\n            name: \"pincode\",\n            value: state.pincode.value,\n            onChange: e => {\n              onInputChange(\"pincode\", e.target.value, dispatch);\n            },\n            onBlur: e => {\n              onFocusOut(\"pincode\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              display: state.pincode.touched && state.pincode.hasError ? \"block\" : \"none\",\n              color: \"red\"\n            },\n            children: [\" \", state.pincode.error, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 388,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Enter landmark\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"form-control\",\n            name: \"landmark\",\n            value: state.landmark.value,\n            onChange: e => {\n              onInputChange(\"landmark\", e.target.value, dispatch);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary btn-blob\",\n            disabled: state.isFormValid ? false : true,\n            onClick: e => {\n              sendData(e);\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Reactusereducer, \"RP0X+iRuJEX/lj1kugNmJalYbsM=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Reactusereducer;\nexport default Reactusereducer; //==================================================\n// import { useReducer, useState } from \"react\";\n// import { useNavigate } from \"react-router\";\n// const init = {\n//     // for loginAll table\n//     uname: \"\",\n//     password: \"\",\n//     role: \"Ambulance\",\n//     drivername: \"\",\n//     aregno: \"\",\n//     avehicalno: \"\",\n//     email: \"\",\n//     mono: \"\",\n//     website: \"\",\n//     state: \"\",\n//     city: \"\",\n//     pincode: \"\",\n//     landmark: \"\",\n//     //  availablestatus: \"\",\n//     ac_status: 1\n// }\n// const reducer = (state, action) => {\n//     switch (action.type) {\n//         case 'update':\n//             return {\n//                 ...state, [action.field]: action.val\n//             };\n//         case 'clear':\n//             return init;\n//     }\n// }\n// // export default function AmbulanceRegisForm1()\n// let Reactusereducer = () => {\n//     const [ambulancesignup, dispatch] = useReducer(reducer, init);\n//     let navigate = useNavigate();\n//     const [sucess, setSucess] = useState(\"false\");\n//     //when click on butoon this fun get called\n//     const hancelClick = (e) => {\n//         e.preventDefault()\n//         // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\n//         // state,city,pincode,landmark,availablestatus,ac_status}\n//         console.log(\"hi\");\n//         console.log(ambulancesignup);\n//         console.log(\"hi\");\n//         fetch(\"http://localhost:8080/ambulancesignup\",\n//             {\n//                 method: \"POST\",\n//                 headers: { \"Content-type\": \"application/json\" },\n//                 body: JSON.stringify(ambulancesignup)\n//             }).then(res => { if(res){\n//                 if(res.status ==200){\n//                     // console.log(\"Success\");\n//                     alert(\"Register/SignUp Sucessfully!!!\");\n//                     navigate('/login');\n//                 }\n//                 else{\n//                     // console.log(\"fail\");\n//                     alert(\"Register Fail--------\")\n//                 }\n//             } } )\n//             // .then( (data)=> setSucess(data))\n//             //     if (sucess === true)\n//             //             {\n//             //                 alert(\"Register/SignUp Sucessfully!!!\");\n//             //                 // Navigator(\"/login\");\n//             //                 navigate('/login');\n//             //             }\n//             //         else\n//             //         {\n//             //             alert(\"Register Fail--------\")\n//             //         }\n//             // .then((data) => {   console.log(data)\n//                 // if (sucess === true)\n//                 //     {\n//                 //         alert(\"Register/SignUp Sucessfully!!!\");\n//                 //         // Navigator(\"/login\");\n//                 //         navigate('/login');\n//                 //     }\n//                 // else\n//                 // {\n//                 //     alert(\"Register Fail--------\")\n//                 // }\n//             // })\n//         //     if (sucess === \"true\")\n//         //     {\n//         //         alert(\"Register/SignUp Sucessfully!!!\");\n//         //         // Navigator(\"/login\");\n//         //         navigate('/login');\n//         //     }\n//         // else\n//         // {\n//         //     alert(\"Register Fail--------\")\n//         // }\n//         // alert(\"Register/SignUp Sucessfully!!!\");\n//         // // Navigator(\"/login\");\n//         // navigate('/login');\n//     }\n//     // //fetch the data from api\n//     // useEffect(() => {\n//     //     fetch(\"http://localhost:8080/\")\n//     //         .then(res => res.json())\n//     //         .then((result) => {\n//     //             setStudents(result);\n//     //         }\n//     //         )\n//     // }, [])\n//     //return method will return html to browser\n//     return (\n//         <div>\n//             <form className=\"formInput container mt-5\">\n//                 <div className=\"signup-form\">\n//                     <h3 className=\"form-title\">Ambulance Register Form</h3>\n//                     <div className=\"form-group\">\n//                         <label >Enter Username</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"uname\" value={ambulancesignup.uname}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'uname', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Password</label>\n//                         <input type=\"password\" className=\"form-control\" name=\"password\" value={ambulancesignup.password}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'password', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Driver Name</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"drivername\" value={ambulancesignup.drivername}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'drivername', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Ambulance Registration Number</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     {/* <div className=\"form-group\">\n//                         <label >Enter Ambulance Registration Number</label>\n//                         <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\n//                         />\n//                     </div> */}\n//                     <div className=\"form-group\">\n//                         <label >Enter Ambulance (Vehical) Number</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={ambulancesignup.avehicalno}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'avehicalno', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Your Email</label>\n//                         <input type=\"email\" className=\"form-control\" name=\"email\" value={ambulancesignup.email}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'email', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Your Mobile Number</label>\n//                         <input type=\"number\" className=\"form-control\" name=\"mono\" value={ambulancesignup.mono}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'mono', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Your Website (If having)</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"website\" value={ambulancesignup.website}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'website', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter State</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"state\" value={ambulancesignup.state}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'state', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter City</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"city\" value={ambulancesignup.city}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'city', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Pincode</label>\n//                         <input type=\"number\" className=\"form-control\" name=\"pincode\" value={ambulancesignup.pincode}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'pincode', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter landmark</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"landmark\" value={ambulancesignup.landmark}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'landmark', val: e.target.value }) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <button className=\"btn btn-primary btn-blob\" onClick={hancelClick} >Submit</button>\n//                         <span style={{ padding: '20px' }}></span>\n//                         <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset' onClick={(e) => { dispatch({ type: 'clear' }) }} />\n//                     </div>\n//                 </div>\n//             </form>\n//             {/* {JSON.stringify(ambulancesignup)} */}\n//         </div>\n//     );\n// }\n// export default Reactusereducer;\n\nvar _c;\n\n$RefreshReg$(_c, \"Reactusereducer\");","map":{"version":3,"names":["useReducer","useNavigate","init","uname","value","hasError","touched","error","password","role","drivername","aregno","avehicalno","email","mono","website","state","city","pincode","landmark","availablestatus","ac_status","validateData","name","regex1","test","regex2","regex3","regex4","regex5","regex6","regex7","regex8","reducer","action","type","isFormValid","data","Reactusereducer","dispatch","navigate","onInputChange","key","item","onFocusOut","sendData","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","res","status","alert","fontSize","target","display","color"],"sources":["I:/C-DAC/Final Project/Digital_Health_Ecosystem_CDAC/reacttemplate/src/ambulance/AmbulanceRegisForm2.js"],"sourcesContent":["\r\nimport { useReducer } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst init = {\r\n    // for loginAll table\r\n    uname: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    password: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    role: \"Ambulance\",\r\n\r\n    drivername: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    aregno: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    avehicalno: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    email:  { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    mono: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    website: \"\",\r\n    state: \"\",\r\n    city: \"\",\r\n    pincode: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n    landmark: \"\",\r\n    availablestatus: 1,\r\n    ac_status: 1\r\n}\r\n\r\n\r\nconst validateData = (name, value) => {\r\n    let hasError = false, error = \"\";\r\n    switch (name) {\r\n        case \"uname\":\r\n            let regex1 = /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,8}[a-zA-Z0-9]$/;\r\n            if (!regex1.test(value)) {\r\n                hasError = true;\r\n                error = \"Small, Capital letter and Numbers len-10 allowd \"\r\n            }\r\n            break;\r\n\r\n        case \"password\":\r\n            let regex2 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\r\n            if (!regex2.test(value)) {\r\n                hasError = true;\r\n                error = \"len 6 one Upper & smaller char one number & special symbol \"\r\n            }\r\n            break;\r\n\r\n        case \"drivername\":\r\n            let regex3 = /^([A-Z][a-zA-Z]*)/;\r\n            if (!regex3.test(value)) {\r\n                hasError = true;\r\n                error = \"first alphabate capital, First name and Last name \"\r\n            }\r\n            break;\r\n\r\n        case \"aregno\":\r\n            let regex4 = /^[A-Z][A-Z,0-9]{10}$/;\r\n            if (!regex4.test(value)) {\r\n                hasError = true;\r\n                error = \"Only capitals alphabets and number 10 length \"\r\n            }\r\n            break;\r\n\r\n        case \"avehicalno\":\r\n            let regex5 = /^[A-Z]{2}[ -][0-9]{1,2}(?: [A-Z])?(?: [A-Z]*)? [0-9]{4}$/;\r\n            if (!regex5.test(value)) {\r\n                hasError = true;\r\n                error = \"Only Capital letter and numbers & spaces \"\r\n            }\r\n            break;\r\n\r\n        case \"mono\":\r\n            let regex6 = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/;\r\n            if (!regex6.test(value)) {\r\n                hasError = true;\r\n                error = \"10 digit only\"\r\n            }\r\n            break;\r\n\r\n        case \"pincode\":\r\n            let regex7 = /^[0-9]{6}$/;\r\n            if (!regex7.test(value)) {\r\n                hasError = true;\r\n                error = \"len 6 digit  \"\r\n            }\r\n            break;\r\n\r\n            case \"email\":\r\n                let regex8 = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\r\n                if (!regex8.test(value)) {\r\n                    hasError = true;\r\n                    error = \"Enter correct email!!  \"\r\n                }\r\n                break;\r\n        \r\n    }\r\n    return { hasError, error }\r\n\r\n}\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'update':\r\n            const { name, value, hasError, error, touched, isFormValid } = action.data;\r\n            return {\r\n                // ...state, [action.field]: action.val\r\n                ...state,\r\n                [name]: { ...state[name], value, hasError, error, touched },\r\n                isFormValid\r\n            };\r\n        case 'clear':\r\n            return init;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n//end==========================================\r\n\r\n// export default function AmbulanceRegisForm1()\r\nlet Reactusereducer = () => {\r\n    // const [ambulancesignup, dispatch] = useReducer(reducer, init);\r\n\r\n    //strt=============================\r\n    const [state, dispatch] = useReducer(reducer, init);\r\n    // const [msg,setMsg] = useState(\"\");\r\n    let navigate= useNavigate();\r\n\r\n    //on change event\r\n    const onInputChange = (name, value, dispatch) => {\r\n        //validation logic\r\n        const { hasError, error } = validateData(name, value); //form field, latest value\r\n\r\n        //which key to be modified - value, hasError, error, touched \r\n        let isFormValid = true;\r\n        for (const key in state) {\r\n            let item = state[key];\r\n            /*if(key === name && hasError)\r\n            {\r\n                isFormValid = false;\r\n                break;\r\n            }\r\n            else if(key !== name && item.hasError)\r\n            {\r\n                isFormValid = false;\r\n                break;\r\n            }*/\r\n            if (item.hasError) {\r\n                isFormValid = false;\r\n                break;\r\n            }\r\n        }\r\n        //gethered one more value - isFormValid\r\n        //dispatch({type:'update',data:{name,value,hasError,error,touched: true, isFormValid}})\r\n\r\n        //sending action object\r\n        dispatch({ type: 'update', data: { name, value, hasError, error, touched: true, isFormValid } })\r\n\r\n    }\r\n\r\n    const onFocusOut = (name, value, dispatch) => {\r\n        const { hasError, error } = validateData(name, value)\r\n        let isFormValid = true\r\n        for (const key in state) {\r\n            const item = state[key]\r\n            if (key === name && hasError) {\r\n                isFormValid = false\r\n                break\r\n            } else if (key !== name && item.hasError) {\r\n                isFormValid = false\r\n                break\r\n            }\r\n        }\r\n        dispatch({\r\n            type: \"update\",\r\n            data: { name, value, hasError, error, touched: true, isFormValid },\r\n        })\r\n    }\r\n\r\n    //end=====================================\r\n\r\n    //when click on butoon this fun get called\r\n    // const hancelClick = (e) => {\r\n    const sendData = (e) => {\r\n        e.preventDefault()\r\n        // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\r\n        // state,city,pincode,landmark,availablestatus,ac_status}\r\n        console.log(\"hi\");\r\n        console.log(state);\r\n        console.log(\"hi\");\r\n\r\n        fetch(\"http://localhost:8080/ambulancesignup\",\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify({\r\n                    uname: state.uname.value,\r\n                    password: state.password.value,\r\n                    role: \"Ambulance\",\r\n                    drivername: state.drivername.value,\r\n                    aregno: state.aregno.value,\r\n                    avehicalno: state.avehicalno.value,\r\n                    email: state.email.value,\r\n                    mono: state.mono.value,\r\n                    website: state.website.value,\r\n                    state: state.state.value,\r\n                    city: state.city.value,\r\n                    pincode: state.pincode.value,\r\n                    landmark: state.landmark.value,\r\n                    availablestatus: 1,\r\n                    ac_status: 1\r\n                })\r\n            })\r\n            // .then(() => { console.log(\"Ambulance registerd Sucessfully \") })\r\n            .then(res => { if(res){\r\n                if(res.status ==200){\r\n                    // console.log(\"Success\");\r\n                    alert(\"Register/SignUp Sucessfully!!!\");\r\n                    navigate('/login');\r\n\r\n                }\r\n                else{\r\n                    // console.log(\"fail\");\r\n                    alert(\"Register Fail--------\")\r\n                }\r\n            } } )\r\n    }\r\n\r\n    //return method will return html to browser\r\n    return (\r\n\r\n        <div className=\"Container-fluid\">\r\n\r\n<div >\r\n\r\n<nav className=\"navbar navbar-expand-xl navbar-dark\">\r\n    <ul className=\"navbar-nav\">\r\n    <li className=\"nav-item active\">\r\n <a className=\"nav-link active \" href=\"#\" style={{ fontSize: \"19px\" }}>Digital Health Ecosystem</a>\r\n</li>\r\n        <li className=\"nav-item active\">\r\n            <a className=\"nav-link\" href=\"/\">Home</a>\r\n        </li>\r\n       \r\n        {/* <li className=\"nav-item\">\r\n//       <a className=\"nav-link disabled\" href=\"#\">Disabled</a>\r\n/  /     </li> */}\r\n        {/* <li className=\"nav-item\">\r\n<a className=\"nav-link\" href=\"/updateambulanceacc\">Update Information</a>\r\n</li> */}\r\n        {/* <li className=\"nav-item\">\r\n<a className=\"nav-link\" href=\"#\" onClick={deleteAC}>Delete Account</a>\r\n</li> */}\r\n        {/* <li className=\"nav-item\">\r\n{/* <Link to='/changeworkingstatus'>Change Working Status</Link> \r\n<a className=\"nav-link\" href=\"/changeworkingstatus\">Change Working Status</a>\r\n</li> */}\r\n        {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link\" href=\"/login\" onClick={logout}>Logout</a>\r\n        </li> */}\r\n\r\n\r\n    </ul>\r\n</nav>\r\n\r\n</div>\r\n\r\n            <form className=\"formInput container mt-5\">\r\n                <div className=\"signup-form\">\r\n\r\n                    <h3 className=\"form-title\">Ambulance Register Form</h3>\r\n\r\n                    <div className=\"form-group\">\r\n\r\n                        <label >Enter Username</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"uname\" value={state.uname.value}\r\n                            onChange={(e) => { onInputChange(\"uname\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"empno\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.uname.touched && state.uname.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.uname.error} </p>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n\r\n                    <div className=\"form-group\">\r\n\r\n                        <label >Enter Password</label>\r\n                        <input type=\"password\" className=\"form-control\" name=\"password\" value={state.password.value}\r\n                            onChange={(e) => { onInputChange(\"password\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"password\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.password.touched && state.password.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.password.error} </p>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Driver Name</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"drivername\" value={state.drivername.value}\r\n                            onChange={(e) => { onInputChange(\"drivername\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"drivername\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.drivername.touched && state.drivername.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.drivername.error} </p>\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Ambulance Registration Number</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"aregno\" value={state.aregno.value}\r\n                            onChange={(e) => { onInputChange(\"aregno\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"aregno\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.aregno.touched && state.aregno.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.aregno.error} </p>\r\n\r\n                    </div>\r\n\r\n\r\n                    {/* <div className=\"form-group\">\r\n                        <label >Enter Ambulance Registration Number</label>\r\n                        <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\r\n                            onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\r\n\r\n                        />\r\n\r\n                    </div> */}\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Ambulance (Vehical) Number</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={state.avehicalno.value}\r\n                            onChange={(e) => { onInputChange(\"avehicalno\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"avehicalno\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.avehicalno.touched && state.avehicalno.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.avehicalno.error} </p>\r\n\r\n                    </div>\r\n\r\n                    {/* ********************* */}\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Your Email</label>\r\n                        <input type=\"email\" className=\"form-control\" name=\"email\" value={state.email.value}\r\n                            onChange={(e) => { onInputChange(\"email\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"email\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.email.touched && state.email.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.email.error} </p>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Your Mobile Number</label>\r\n                        <input type=\"number\" className=\"form-control\" name=\"mono\" value={state.mono.value}\r\n                            onChange={(e) => { onInputChange(\"mono\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"mono\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.mono.touched && state.mono.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.mono.error} </p>\r\n\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Your Website (If having)</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"website\" value={state.website.value}\r\n                            onChange={(e) => { onInputChange(\"website\", e.target.value, dispatch) }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter State</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"state\" value={state.state.value}\r\n                            onChange={(e) => { onInputChange(\"state\", e.target.value, dispatch) }}\r\n                        />\r\n\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter City</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"city\" value={state.city.value}\r\n                            onChange={(e) => { onInputChange(\"city\", e.target.value, dispatch) }}\r\n                        />\r\n                    </div>\r\n\r\n\r\n                    <div className=\"form-group\">\r\n                        <label >Enter Pincode</label>\r\n                        <input type=\"number\" className=\"form-control\" name=\"pincode\" value={state.pincode.value}\r\n                            onChange={(e) => { onInputChange(\"pincode\", e.target.value, dispatch) }}\r\n                            onBlur={(e) => { onFocusOut(\"pincode\", e.target.value, dispatch) }} />\r\n                        <p style={{ display: state.pincode.touched && state.pincode.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.pincode.error} </p>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label >Enter landmark</label>\r\n                        <input type=\"text\" className=\"form-control\" name=\"landmark\" value={state.landmark.value}\r\n                            onChange={(e) => { onInputChange(\"landmark\", e.target.value, dispatch) }}\r\n                        />\r\n\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-primary btn-blob\" disabled={state.isFormValid ? false : true}\r\n                            onClick={(e) => { sendData(e) }} >Submit</button>\r\n                        {/* <span style={{ padding: '20px' }}></span>\r\n                        <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset'\r\n                            onClick={() => { dispatch({ type: 'reset' }) }} /> */}\r\n\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n            {/* {JSON.stringify(ambulancesignup)} */}\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\nexport default Reactusereducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n//==================================================\r\n\r\n\r\n\r\n// import { useReducer, useState } from \"react\";\r\n// import { useNavigate } from \"react-router\";\r\n\r\n// const init = {\r\n//     // for loginAll table\r\n//     uname: \"\",\r\n//     password: \"\",\r\n//     role: \"Ambulance\",\r\n\r\n//     drivername: \"\",\r\n//     aregno: \"\",\r\n//     avehicalno: \"\",\r\n//     email: \"\",\r\n//     mono: \"\",\r\n//     website: \"\",\r\n//     state: \"\",\r\n//     city: \"\",\r\n//     pincode: \"\",\r\n//     landmark: \"\",\r\n//     //  availablestatus: \"\",\r\n//     ac_status: 1\r\n\r\n// }\r\n\r\n// const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//         case 'update':\r\n//             return {\r\n//                 ...state, [action.field]: action.val\r\n//             };\r\n//         case 'clear':\r\n//             return init;\r\n//     }\r\n\r\n// }\r\n\r\n// // export default function AmbulanceRegisForm1()\r\n// let Reactusereducer = () => {\r\n//     const [ambulancesignup, dispatch] = useReducer(reducer, init);\r\n\r\n//     let navigate = useNavigate();\r\n//     const [sucess, setSucess] = useState(\"false\");\r\n\r\n//     //when click on butoon this fun get called\r\n//     const hancelClick = (e) => {\r\n//         e.preventDefault()\r\n//         // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\r\n//         // state,city,pincode,landmark,availablestatus,ac_status}\r\n//         console.log(\"hi\");\r\n//         console.log(ambulancesignup);\r\n//         console.log(\"hi\");\r\n\r\n//         fetch(\"http://localhost:8080/ambulancesignup\",\r\n//             {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-type\": \"application/json\" },\r\n//                 body: JSON.stringify(ambulancesignup)\r\n//             }).then(res => { if(res){\r\n//                 if(res.status ==200){\r\n//                     // console.log(\"Success\");\r\n//                     alert(\"Register/SignUp Sucessfully!!!\");\r\n//                     navigate('/login');\r\n\r\n//                 }\r\n//                 else{\r\n//                     // console.log(\"fail\");\r\n//                     alert(\"Register Fail--------\")\r\n//                 }\r\n//             } } )\r\n//             // .then( (data)=> setSucess(data))\r\n//             //     if (sucess === true)\r\n//             //             {\r\n//             //                 alert(\"Register/SignUp Sucessfully!!!\");\r\n//             //                 // Navigator(\"/login\");\r\n//             //                 navigate('/login');\r\n//             //             }\r\n//             //         else\r\n//             //         {\r\n//             //             alert(\"Register Fail--------\")\r\n//             //         }\r\n         \r\n//             // .then((data) => {   console.log(data)\r\n//                 // if (sucess === true)\r\n//                 //     {\r\n//                 //         alert(\"Register/SignUp Sucessfully!!!\");\r\n//                 //         // Navigator(\"/login\");\r\n//                 //         navigate('/login');\r\n//                 //     }\r\n//                 // else\r\n//                 // {\r\n//                 //     alert(\"Register Fail--------\")\r\n//                 // }\r\n//             // })\r\n\r\n//         //     if (sucess === \"true\")\r\n//         //     {\r\n//         //         alert(\"Register/SignUp Sucessfully!!!\");\r\n//         //         // Navigator(\"/login\");\r\n//         //         navigate('/login');\r\n//         //     }\r\n//         // else\r\n//         // {\r\n//         //     alert(\"Register Fail--------\")\r\n//         // }\r\n\r\n//         // alert(\"Register/SignUp Sucessfully!!!\");\r\n//         // // Navigator(\"/login\");\r\n//         // navigate('/login');\r\n//     }\r\n\r\n\r\n//     // //fetch the data from api\r\n//     // useEffect(() => {\r\n//     //     fetch(\"http://localhost:8080/\")\r\n//     //         .then(res => res.json())\r\n//     //         .then((result) => {\r\n//     //             setStudents(result);\r\n//     //         }\r\n//     //         )\r\n//     // }, [])\r\n\r\n//     //return method will return html to browser\r\n//     return (\r\n\r\n//         <div>\r\n//             <form className=\"formInput container mt-5\">\r\n//                 <div className=\"signup-form\">\r\n\r\n//                     <h3 className=\"form-title\">Ambulance Register Form</h3>\r\n\r\n//                     <div className=\"form-group\">\r\n\r\n//                         <label >Enter Username</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"uname\" value={ambulancesignup.uname}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'uname', val: e.target.value }) }}\r\n//                         />\r\n//                     </div>\r\n\r\n//                     <div className=\"form-group\">\r\n\r\n//                         <label >Enter Password</label>\r\n//                         <input type=\"password\" className=\"form-control\" name=\"password\" value={ambulancesignup.password}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'password', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Driver Name</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"drivername\" value={ambulancesignup.drivername}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'drivername', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Ambulance Registration Number</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\r\n\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     {/* <div className=\"form-group\">\r\n//                         <label >Enter Ambulance Registration Number</label>\r\n//                         <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\r\n\r\n//                         />\r\n\r\n//                     </div> */}\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Ambulance (Vehical) Number</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={ambulancesignup.avehicalno}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'avehicalno', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Your Email</label>\r\n//                         <input type=\"email\" className=\"form-control\" name=\"email\" value={ambulancesignup.email}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'email', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Your Mobile Number</label>\r\n//                         <input type=\"number\" className=\"form-control\" name=\"mono\" value={ambulancesignup.mono}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'mono', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Your Website (If having)</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"website\" value={ambulancesignup.website}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'website', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter State</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"state\" value={ambulancesignup.state}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'state', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter City</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"city\" value={ambulancesignup.city}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'city', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Pincode</label>\r\n//                         <input type=\"number\" className=\"form-control\" name=\"pincode\" value={ambulancesignup.pincode}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'pincode', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter landmark</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"landmark\" value={ambulancesignup.landmark}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'landmark', val: e.target.value }) }}\r\n//                         />\r\n\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <button className=\"btn btn-primary btn-blob\" onClick={hancelClick} >Submit</button>\r\n//                         <span style={{ padding: '20px' }}></span>\r\n//                         <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset' onClick={(e) => { dispatch({ type: 'clear' }) }} />\r\n\r\n//                     </div>\r\n//                 </div>\r\n//             </form>\r\n\r\n//             {/* {JSON.stringify(ambulancesignup)} */}\r\n\r\n//         </div>\r\n\r\n//     );\r\n\r\n// }\r\n// export default Reactusereducer;\r\n\r\n"],"mappings":"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7HJ,eAoII;UAAK,SAAS,EAAC,YAAf;UAAA,uBACI;YAAQ,SAAS,EAAC,0BAAlB;YAA6C,QAAQ,EAAEvB,KAAK,CAACoB,WAAN,GAAoB,KAApB,GAA4B,IAAnF;YACI,OAAO,EAAGU,CAAD,IAAO;cAAED,QAAQ,CAACC,CAAD,CAAR;YAAa,CADnC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA,QApIJ;MAAA;QAAA;QAAA;QAAA;MAAA;IADJ;MAAA;MAAA;MAAA;IAAA,QApCJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAFJ;AA4LH,CAzSD;;GAAIR,e;UAMcrC,W;;;KANdqC,e;AA0SJ,eAAeA,eAAf,C,CAoBA;AAIA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA"},"metadata":{},"sourceType":"module"}
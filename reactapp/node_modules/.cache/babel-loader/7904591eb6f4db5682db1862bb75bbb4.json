{"ast":null,"code":"// import { useReducer } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// const init = {\n//     // for loginAll table\n//     uname: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     password: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     role: \"Ambulance\",\n//     drivername: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     aregno: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     avehicalno: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     email: \"\",\n//     mono: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     website: \"\",\n//     state: \"\",\n//     city: \"\",\n//     pincode: { value: \"\", hasError: true, touched: false, error: \"\" },\n//     landmark: \"\",\n//      availablestatus: 1,\n//     ac_status: 1\n// }\n// const validateData = (name, value) => {\n//     let hasError = false, error = \"\";\n//     switch (name) {\n//         case \"uname\":\n//             let regex1 = /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,8}[a-zA-Z0-9]$/;\n//             if (!regex1.test(value)) {\n//                 hasError = true;\n//                 error = \"User name A-Z a-z 0-9 ._- a-z len-10 \"\n//             }\n//             break;\n//         case \"password\":\n//             let regex2 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\n//             if (!regex2.test(value)) {\n//                 hasError = true;\n//                 error = \"len 6 one Upper & smaller char one number & special symbol \"\n//             }\n//             break;\n//         case \"drivername\":\n//             let regex3 = /^[A-Z][a-z]{2,15}$/;\n//             if (!regex3.test(value)) {\n//                 hasError = true;\n//                 error = \"len-15 Driver name - first letter capital, rest - small \"\n//             }\n//             break;\n//         case \"aregno\":\n//             let regex4 = /^[A-Z][A-Z][0-9]{10}$/;\n//             if (!regex4.test(value)) {\n//                 hasError = true;\n//                 error = \"Only capitals and number 10 length \"\n//             }\n//             break;\n//         case \"avehicalno\":\n//             let regex5 = /^[A-Z]{2}[ -][0-9]{1,2}(?: [A-Z])?(?: [A-Z]*)? [0-9]{4}$/;\n//             if (!regex5.test(value)) {\n//                 hasError = true;\n//                 error = \"Enter Corect RTO Number \"\n//             }\n//             break;\n//         case \"mono\":\n//             let regex6 = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/;\n//             if (!regex6.test(value)) {\n//                 hasError = true;\n//                 error = \"10 digit mo no \"\n//             }\n//             break;\n//         case \"pincode\":\n//             let regex7 = /^[0-9]{6}$/;\n//             if (!regex7.test(value)) {\n//                 hasError = true;\n//                 error = \"len 6 digit  \"\n//             }\n//             break;\n//     }\n//     return { hasError, error }\n// }\n// const reducer = (state, action) => {\n//     switch (action.type) {\n//         case 'update':\n//             const { name, value, hasError, error, touched, isFormValid } = action.data;\n//             return {\n//                 // ...state, [action.field]: action.val\n//                 ...state,\n//                 [name]: { ...state[name], value, hasError, error, touched },\n//                 isFormValid\n//             };\n//         case 'clear':\n//             return init;\n//     }\n// }\n// //end==========================================\n// // export default function AmbulanceRegisForm1()\n// let Reactusereducer = () => {\n//     // const [ambulancesignup, dispatch] = useReducer(reducer, init);\n//     //strt=============================\n//     const [state, dispatch] = useReducer(reducer, init);\n//     // const [msg,setMsg] = useState(\"\");\n//     let navigate= useNavigate();\n//     //on change event\n//     const onInputChange = (name, value, dispatch) => {\n//         //validation logic\n//         const { hasError, error } = validateData(name, value); //form field, latest value\n//         //which key to be modified - value, hasError, error, touched \n//         let isFormValid = true;\n//         for (const key in state) {\n//             let item = state[key];\n//             /*if(key === name && hasError)\n//             {\n//                 isFormValid = false;\n//                 break;\n//             }\n//             else if(key !== name && item.hasError)\n//             {\n//                 isFormValid = false;\n//                 break;\n//             }*/\n//             if (item.hasError) {\n//                 isFormValid = false;\n//                 break;\n//             }\n//         }\n//         //gethered one more value - isFormValid\n//         //dispatch({type:'update',data:{name,value,hasError,error,touched: true, isFormValid}})\n//         //sending action object\n//         dispatch({ type: 'update', data: { name, value, hasError, error, touched: true, isFormValid } })\n//     }\n//     const onFocusOut = (name, value, dispatch) => {\n//         const { hasError, error } = validateData(name, value)\n//         let isFormValid = true\n//         for (const key in state) {\n//             const item = state[key]\n//             if (key === name && hasError) {\n//                 isFormValid = false\n//                 break\n//             } else if (key !== name && item.hasError) {\n//                 isFormValid = false\n//                 break\n//             }\n//         }\n//         dispatch({\n//             type: \"update\",\n//             data: { name, value, hasError, error, touched: true, isFormValid },\n//         })\n//     }\n//     //end=====================================\n//     //when click on butoon this fun get called\n//     // const hancelClick = (e) => {\n//     const sendData = (e) => {\n//         e.preventDefault()\n//         // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\n//         // state,city,pincode,landmark,availablestatus,ac_status}\n//         console.log(\"hi\");\n//         console.log(state);\n//         console.log(\"hi\");\n//         fetch(\"http://localhost:8080/ambulancesignup\",\n//             {\n//                 method: \"POST\",\n//                 headers: { \"Content-type\": \"application/json\" },\n//                 body: JSON.stringify({\n//                     uname: state.uname.value,\n//                     password: state.password.value,\n//                     role: \"Ambulance\",\n//                     drivername: state.drivername.value,\n//                     aregno: state.aregno.value,\n//                     avehicalno: state.avehicalno.value,\n//                     email: state.email.value,\n//                     mono: state.mono.value,\n//                     website: state.website.value,\n//                     state: state.state.value,\n//                     city: state.city.value,\n//                     pincode: state.pincode.value,\n//                     landmark: state.landmark.value,\n//                     availablestatus: 1,\n//                     ac_status: 1\n//                 })\n//             })\n//             // .then(() => { console.log(\"Ambulance registerd Sucessfully \") })\n//             .then(res => { if(res){\n//                 if(res.status ==200){\n//                     // console.log(\"Success\");\n//                     alert(\"Register/SignUp Sucessfully!!!\");\n//                     navigate('/login');\n//                 }\n//                 else{\n//                     // console.log(\"fail\");\n//                     alert(\"Register Fail--------\")\n//                 }\n//             } } )\n//     }\n//     //return method will return html to browser\n//     return (\n//         <div>\n//             <form className=\"formInput container mt-5\">\n//                 <div className=\"signup-form\">\n//                     <h3 className=\"form-title\">Ambulance Register Form</h3>\n//                     <div className=\"form-group\">\n//                         <label >Enter Username</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"uname\" value={state.uname.value}\n//                             onChange={(e) => { onInputChange(\"uname\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"empno\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.uname.touched && state.uname.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.uname.error} </p>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Password</label>\n//                         <input type=\"password\" className=\"form-control\" name=\"password\" value={state.password.value}\n//                             onChange={(e) => { onInputChange(\"password\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"password\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.password.touched && state.password.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.password.error} </p>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Driver Name</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"drivername\" value={state.drivername.value}\n//                             onChange={(e) => { onInputChange(\"drivername\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"drivername\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.drivername.touched && state.drivername.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.drivername.error} </p>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Ambulance Registration Number</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"aregno\" value={state.aregno.value}\n//                             onChange={(e) => { onInputChange(\"aregno\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"aregno\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.aregno.touched && state.aregno.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.aregno.error} </p>\n//                     </div>\n//                     {/* <div className=\"form-group\">\n//                         <label >Enter Ambulance Registration Number</label>\n//                         <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\n//                         />\n//                     </div> */}\n//                     <div className=\"form-group\">\n//                         <label >Enter Ambulance (Vehical) Number</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={state.avehicalno.value}\n//                             onChange={(e) => { onInputChange(\"avehicalno\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"avehicalno\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.avehicalno.touched && state.avehicalno.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.avehicalno.error} </p>\n//                     </div>\n//                     {/* ********************* */}\n//                     <div className=\"form-group\">\n//                         <label >Enter Your Email</label>\n//                         <input type=\"email\" className=\"form-control\" name=\"email\" value={state.email.value}\n//                             onChange={(e) => { onInputChange(\"email\", e.target.value, dispatch) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Your Mobile Number</label>\n//                         <input type=\"number\" className=\"form-control\" name=\"mono\" value={state.mono.value}\n//                             onChange={(e) => { onInputChange(\"mono\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"mono\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.mono.touched && state.mono.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.mono.error} </p>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Your Website (If having)</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"website\" value={state.website.value}\n//                             onChange={(e) => { onInputChange(\"website\", e.target.value, dispatch) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter State</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"state\" value={state.state.value}\n//                             onChange={(e) => { onInputChange(\"state\", e.target.value, dispatch) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter City</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"city\" value={state.city.value}\n//                             onChange={(e) => { onInputChange(\"city\", e.target.value, dispatch) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter Pincode</label>\n//                         <input type=\"number\" className=\"form-control\" name=\"pincode\" value={state.pincode.value}\n//                             onChange={(e) => { onInputChange(\"pincode\", e.target.value, dispatch) }}\n//                             onBlur={(e) => { onFocusOut(\"pincode\", e.target.value, dispatch) }} />\n//                         <p style={{ display: state.pincode.touched && state.pincode.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.pincode.error} </p>\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <label >Enter landmark</label>\n//                         <input type=\"text\" className=\"form-control\" name=\"landmark\" value={state.landmark.value}\n//                             onChange={(e) => { onInputChange(\"landmark\", e.target.value, dispatch) }}\n//                         />\n//                     </div>\n//                     <div className=\"form-group\">\n//                         <button className=\"btn btn-primary btn-blob\" disabled={state.isFormValid ? false : true}\n//                             onClick={(e) => { sendData(e) }} >Submit</button>\n//                         {/* <span style={{ padding: '20px' }}></span>\n//                         <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset'\n//                             onClick={() => { dispatch({ type: 'reset' }) }} /> */}\n//                     </div>\n//                 </div>\n//             </form>\n//             {/* {JSON.stringify(ambulancesignup)} */}\n//         </div>\n//     );\n// }\n// export default Reactusereducer;\n// //==================================================\n// // import { useReducer, useState } from \"react\";\n// // import { useNavigate } from \"react-router\";\n// // const init = {\n// //     // for loginAll table\n// //     uname: \"\",\n// //     password: \"\",\n// //     role: \"Ambulance\",\n// //     drivername: \"\",\n// //     aregno: \"\",\n// //     avehicalno: \"\",\n// //     email: \"\",\n// //     mono: \"\",\n// //     website: \"\",\n// //     state: \"\",\n// //     city: \"\",\n// //     pincode: \"\",\n// //     landmark: \"\",\n// //     //  availablestatus: \"\",\n// //     ac_status: 1\n// // }\n// // const reducer = (state, action) => {\n// //     switch (action.type) {\n// //         case 'update':\n// //             return {\n// //                 ...state, [action.field]: action.val\n// //             };\n// //         case 'clear':\n// //             return init;\n// //     }\n// // }\n// // // export default function AmbulanceRegisForm1()\n// // let Reactusereducer = () => {\n// //     const [ambulancesignup, dispatch] = useReducer(reducer, init);\n// //     let navigate = useNavigate();\n// //     const [sucess, setSucess] = useState(\"false\");\n// //     //when click on butoon this fun get called\n// //     const hancelClick = (e) => {\n// //         e.preventDefault()\n// //         // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\n// //         // state,city,pincode,landmark,availablestatus,ac_status}\n// //         console.log(\"hi\");\n// //         console.log(ambulancesignup);\n// //         console.log(\"hi\");\n// //         fetch(\"http://localhost:8080/ambulancesignup\",\n// //             {\n// //                 method: \"POST\",\n// //                 headers: { \"Content-type\": \"application/json\" },\n// //                 body: JSON.stringify(ambulancesignup)\n// //             }).then(res => { if(res){\n// //                 if(res.status ==200){\n// //                     // console.log(\"Success\");\n// //                     alert(\"Register/SignUp Sucessfully!!!\");\n// //                     navigate('/login');\n// //                 }\n// //                 else{\n// //                     // console.log(\"fail\");\n// //                     alert(\"Register Fail--------\")\n// //                 }\n// //             } } )\n// //             // .then( (data)=> setSucess(data))\n// //             //     if (sucess === true)\n// //             //             {\n// //             //                 alert(\"Register/SignUp Sucessfully!!!\");\n// //             //                 // Navigator(\"/login\");\n// //             //                 navigate('/login');\n// //             //             }\n// //             //         else\n// //             //         {\n// //             //             alert(\"Register Fail--------\")\n// //             //         }\n// //             // .then((data) => {   console.log(data)\n// //                 // if (sucess === true)\n// //                 //     {\n// //                 //         alert(\"Register/SignUp Sucessfully!!!\");\n// //                 //         // Navigator(\"/login\");\n// //                 //         navigate('/login');\n// //                 //     }\n// //                 // else\n// //                 // {\n// //                 //     alert(\"Register Fail--------\")\n// //                 // }\n// //             // })\n// //         //     if (sucess === \"true\")\n// //         //     {\n// //         //         alert(\"Register/SignUp Sucessfully!!!\");\n// //         //         // Navigator(\"/login\");\n// //         //         navigate('/login');\n// //         //     }\n// //         // else\n// //         // {\n// //         //     alert(\"Register Fail--------\")\n// //         // }\n// //         // alert(\"Register/SignUp Sucessfully!!!\");\n// //         // // Navigator(\"/login\");\n// //         // navigate('/login');\n// //     }\n// //     // //fetch the data from api\n// //     // useEffect(() => {\n// //     //     fetch(\"http://localhost:8080/\")\n// //     //         .then(res => res.json())\n// //     //         .then((result) => {\n// //     //             setStudents(result);\n// //     //         }\n// //     //         )\n// //     // }, [])\n// //     //return method will return html to browser\n// //     return (\n// //         <div>\n// //             <form className=\"formInput container mt-5\">\n// //                 <div className=\"signup-form\">\n// //                     <h3 className=\"form-title\">Ambulance Register Form</h3>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Username</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"uname\" value={ambulancesignup.uname}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'uname', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Password</label>\n// //                         <input type=\"password\" className=\"form-control\" name=\"password\" value={ambulancesignup.password}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'password', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Driver Name</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"drivername\" value={ambulancesignup.drivername}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'drivername', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Ambulance Registration Number</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     {/* <div className=\"form-group\">\n// //                         <label >Enter Ambulance Registration Number</label>\n// //                         <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\n// //                         />\n// //                     </div> */}\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Ambulance (Vehical) Number</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={ambulancesignup.avehicalno}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'avehicalno', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Your Email</label>\n// //                         <input type=\"email\" className=\"form-control\" name=\"email\" value={ambulancesignup.email}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'email', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Your Mobile Number</label>\n// //                         <input type=\"number\" className=\"form-control\" name=\"mono\" value={ambulancesignup.mono}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'mono', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Your Website (If having)</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"website\" value={ambulancesignup.website}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'website', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter State</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"state\" value={ambulancesignup.state}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'state', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter City</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"city\" value={ambulancesignup.city}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'city', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter Pincode</label>\n// //                         <input type=\"number\" className=\"form-control\" name=\"pincode\" value={ambulancesignup.pincode}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'pincode', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <label >Enter landmark</label>\n// //                         <input type=\"text\" className=\"form-control\" name=\"landmark\" value={ambulancesignup.landmark}\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'landmark', val: e.target.value }) }}\n// //                         />\n// //                     </div>\n// //                     <div className=\"form-group\">\n// //                         <button className=\"btn btn-primary btn-blob\" onClick={hancelClick} >Submit</button>\n// //                         <span style={{ padding: '20px' }}></span>\n// //                         <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset' onClick={(e) => { dispatch({ type: 'clear' }) }} />\n// //                     </div>\n// //                 </div>\n// //             </form>\n// //             {/* {JSON.stringify(ambulancesignup)} */}\n// //         </div>\n// //     );\n// // }\n// // export default Reactusereducer;","map":{"version":3,"names":[],"sources":["C:/Users/Dipendra/Desktop/prj imgs/Landing pg/reacttemplate/src/ambulance/AmbulanceRegisForm2.js"],"sourcesContent":["\r\n// import { useReducer } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// const init = {\r\n//     // for loginAll table\r\n//     uname: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     password: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     role: \"Ambulance\",\r\n\r\n//     drivername: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     aregno: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     avehicalno: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     email: \"\",\r\n//     mono: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     website: \"\",\r\n//     state: \"\",\r\n//     city: \"\",\r\n//     pincode: { value: \"\", hasError: true, touched: false, error: \"\" },\r\n//     landmark: \"\",\r\n//      availablestatus: 1,\r\n//     ac_status: 1\r\n// }\r\n\r\n\r\n// const validateData = (name, value) => {\r\n//     let hasError = false, error = \"\";\r\n//     switch (name) {\r\n//         case \"uname\":\r\n//             let regex1 = /^[a-zA-Z0-9]([._-](?![._-])|[a-zA-Z0-9]){3,8}[a-zA-Z0-9]$/;\r\n//             if (!regex1.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"User name A-Z a-z 0-9 ._- a-z len-10 \"\r\n//             }\r\n//             break;\r\n\r\n//         case \"password\":\r\n//             let regex2 = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/;\r\n//             if (!regex2.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"len 6 one Upper & smaller char one number & special symbol \"\r\n//             }\r\n//             break;\r\n\r\n//         case \"drivername\":\r\n//             let regex3 = /^[A-Z][a-z]{2,15}$/;\r\n//             if (!regex3.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"len-15 Driver name - first letter capital, rest - small \"\r\n//             }\r\n//             break;\r\n\r\n//         case \"aregno\":\r\n//             let regex4 = /^[A-Z][A-Z][0-9]{10}$/;\r\n//             if (!regex4.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"Only capitals and number 10 length \"\r\n//             }\r\n//             break;\r\n\r\n//         case \"avehicalno\":\r\n//             let regex5 = /^[A-Z]{2}[ -][0-9]{1,2}(?: [A-Z])?(?: [A-Z]*)? [0-9]{4}$/;\r\n//             if (!regex5.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"Enter Corect RTO Number \"\r\n//             }\r\n//             break;\r\n\r\n//         case \"mono\":\r\n//             let regex6 = /^(\\+\\d{1,3}[- ]?)?\\d{10}$/;\r\n//             if (!regex6.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"10 digit mo no \"\r\n//             }\r\n//             break;\r\n\r\n//         case \"pincode\":\r\n//             let regex7 = /^[0-9]{6}$/;\r\n//             if (!regex7.test(value)) {\r\n//                 hasError = true;\r\n//                 error = \"len 6 digit  \"\r\n//             }\r\n//             break;\r\n\r\n\r\n//     }\r\n//     return { hasError, error }\r\n\r\n// }\r\n\r\n// const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//         case 'update':\r\n//             const { name, value, hasError, error, touched, isFormValid } = action.data;\r\n//             return {\r\n//                 // ...state, [action.field]: action.val\r\n//                 ...state,\r\n//                 [name]: { ...state[name], value, hasError, error, touched },\r\n//                 isFormValid\r\n//             };\r\n//         case 'clear':\r\n//             return init;\r\n//     }\r\n\r\n// }\r\n\r\n\r\n\r\n// //end==========================================\r\n\r\n// // export default function AmbulanceRegisForm1()\r\n// let Reactusereducer = () => {\r\n//     // const [ambulancesignup, dispatch] = useReducer(reducer, init);\r\n\r\n//     //strt=============================\r\n//     const [state, dispatch] = useReducer(reducer, init);\r\n//     // const [msg,setMsg] = useState(\"\");\r\n//     let navigate= useNavigate();\r\n\r\n//     //on change event\r\n//     const onInputChange = (name, value, dispatch) => {\r\n//         //validation logic\r\n//         const { hasError, error } = validateData(name, value); //form field, latest value\r\n\r\n//         //which key to be modified - value, hasError, error, touched \r\n//         let isFormValid = true;\r\n//         for (const key in state) {\r\n//             let item = state[key];\r\n//             /*if(key === name && hasError)\r\n//             {\r\n//                 isFormValid = false;\r\n//                 break;\r\n//             }\r\n//             else if(key !== name && item.hasError)\r\n//             {\r\n//                 isFormValid = false;\r\n//                 break;\r\n//             }*/\r\n//             if (item.hasError) {\r\n//                 isFormValid = false;\r\n//                 break;\r\n//             }\r\n//         }\r\n//         //gethered one more value - isFormValid\r\n//         //dispatch({type:'update',data:{name,value,hasError,error,touched: true, isFormValid}})\r\n\r\n//         //sending action object\r\n//         dispatch({ type: 'update', data: { name, value, hasError, error, touched: true, isFormValid } })\r\n\r\n//     }\r\n\r\n//     const onFocusOut = (name, value, dispatch) => {\r\n//         const { hasError, error } = validateData(name, value)\r\n//         let isFormValid = true\r\n//         for (const key in state) {\r\n//             const item = state[key]\r\n//             if (key === name && hasError) {\r\n//                 isFormValid = false\r\n//                 break\r\n//             } else if (key !== name && item.hasError) {\r\n//                 isFormValid = false\r\n//                 break\r\n//             }\r\n//         }\r\n//         dispatch({\r\n//             type: \"update\",\r\n//             data: { name, value, hasError, error, touched: true, isFormValid },\r\n//         })\r\n//     }\r\n\r\n//     //end=====================================\r\n\r\n//     //when click on butoon this fun get called\r\n//     // const hancelClick = (e) => {\r\n//     const sendData = (e) => {\r\n//         e.preventDefault()\r\n//         // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\r\n//         // state,city,pincode,landmark,availablestatus,ac_status}\r\n//         console.log(\"hi\");\r\n//         console.log(state);\r\n//         console.log(\"hi\");\r\n\r\n//         fetch(\"http://localhost:8080/ambulancesignup\",\r\n//             {\r\n//                 method: \"POST\",\r\n//                 headers: { \"Content-type\": \"application/json\" },\r\n//                 body: JSON.stringify({\r\n//                     uname: state.uname.value,\r\n//                     password: state.password.value,\r\n//                     role: \"Ambulance\",\r\n//                     drivername: state.drivername.value,\r\n//                     aregno: state.aregno.value,\r\n//                     avehicalno: state.avehicalno.value,\r\n//                     email: state.email.value,\r\n//                     mono: state.mono.value,\r\n//                     website: state.website.value,\r\n//                     state: state.state.value,\r\n//                     city: state.city.value,\r\n//                     pincode: state.pincode.value,\r\n//                     landmark: state.landmark.value,\r\n//                     availablestatus: 1,\r\n//                     ac_status: 1\r\n//                 })\r\n//             })\r\n//             // .then(() => { console.log(\"Ambulance registerd Sucessfully \") })\r\n//             .then(res => { if(res){\r\n//                 if(res.status ==200){\r\n//                     // console.log(\"Success\");\r\n//                     alert(\"Register/SignUp Sucessfully!!!\");\r\n//                     navigate('/login');\r\n\r\n//                 }\r\n//                 else{\r\n//                     // console.log(\"fail\");\r\n//                     alert(\"Register Fail--------\")\r\n//                 }\r\n//             } } )\r\n//     }\r\n\r\n//     //return method will return html to browser\r\n//     return (\r\n\r\n//         <div>\r\n//             <form className=\"formInput container mt-5\">\r\n//                 <div className=\"signup-form\">\r\n\r\n//                     <h3 className=\"form-title\">Ambulance Register Form</h3>\r\n\r\n//                     <div className=\"form-group\">\r\n\r\n//                         <label >Enter Username</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"uname\" value={state.uname.value}\r\n//                             onChange={(e) => { onInputChange(\"uname\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"empno\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.uname.touched && state.uname.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.uname.error} </p>\r\n\r\n\r\n//                     </div>\r\n\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n\r\n//                         <label >Enter Password</label>\r\n//                         <input type=\"password\" className=\"form-control\" name=\"password\" value={state.password.value}\r\n//                             onChange={(e) => { onInputChange(\"password\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"password\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.password.touched && state.password.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.password.error} </p>\r\n\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Driver Name</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"drivername\" value={state.drivername.value}\r\n//                             onChange={(e) => { onInputChange(\"drivername\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"drivername\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.drivername.touched && state.drivername.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.drivername.error} </p>\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Ambulance Registration Number</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"aregno\" value={state.aregno.value}\r\n//                             onChange={(e) => { onInputChange(\"aregno\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"aregno\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.aregno.touched && state.aregno.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.aregno.error} </p>\r\n\r\n//                     </div>\r\n\r\n\r\n//                     {/* <div className=\"form-group\">\r\n//                         <label >Enter Ambulance Registration Number</label>\r\n//                         <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\r\n//                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\r\n\r\n//                         />\r\n\r\n//                     </div> */}\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Ambulance (Vehical) Number</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={state.avehicalno.value}\r\n//                             onChange={(e) => { onInputChange(\"avehicalno\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"avehicalno\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.avehicalno.touched && state.avehicalno.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.avehicalno.error} </p>\r\n\r\n//                     </div>\r\n\r\n//                     {/* ********************* */}\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Your Email</label>\r\n//                         <input type=\"email\" className=\"form-control\" name=\"email\" value={state.email.value}\r\n//                             onChange={(e) => { onInputChange(\"email\", e.target.value, dispatch) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Your Mobile Number</label>\r\n//                         <input type=\"number\" className=\"form-control\" name=\"mono\" value={state.mono.value}\r\n//                             onChange={(e) => { onInputChange(\"mono\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"mono\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.mono.touched && state.mono.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.mono.error} </p>\r\n\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Your Website (If having)</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"website\" value={state.website.value}\r\n//                             onChange={(e) => { onInputChange(\"website\", e.target.value, dispatch) }}\r\n//                         />\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter State</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"state\" value={state.state.value}\r\n//                             onChange={(e) => { onInputChange(\"state\", e.target.value, dispatch) }}\r\n//                         />\r\n\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter City</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"city\" value={state.city.value}\r\n//                             onChange={(e) => { onInputChange(\"city\", e.target.value, dispatch) }}\r\n//                         />\r\n//                     </div>\r\n\r\n\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter Pincode</label>\r\n//                         <input type=\"number\" className=\"form-control\" name=\"pincode\" value={state.pincode.value}\r\n//                             onChange={(e) => { onInputChange(\"pincode\", e.target.value, dispatch) }}\r\n//                             onBlur={(e) => { onFocusOut(\"pincode\", e.target.value, dispatch) }} />\r\n//                         <p style={{ display: state.pincode.touched && state.pincode.hasError ? \"block\" : \"none\", color: \"red\" }}> {state.pincode.error} </p>\r\n\r\n\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <label >Enter landmark</label>\r\n//                         <input type=\"text\" className=\"form-control\" name=\"landmark\" value={state.landmark.value}\r\n//                             onChange={(e) => { onInputChange(\"landmark\", e.target.value, dispatch) }}\r\n//                         />\r\n\r\n//                     </div>\r\n//                     <div className=\"form-group\">\r\n//                         <button className=\"btn btn-primary btn-blob\" disabled={state.isFormValid ? false : true}\r\n//                             onClick={(e) => { sendData(e) }} >Submit</button>\r\n//                         {/* <span style={{ padding: '20px' }}></span>\r\n//                         <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset'\r\n//                             onClick={() => { dispatch({ type: 'reset' }) }} /> */}\r\n\r\n//                     </div>\r\n//                 </div>\r\n//             </form>\r\n\r\n//             {/* {JSON.stringify(ambulancesignup)} */}\r\n\r\n//         </div>\r\n\r\n//     );\r\n\r\n// }\r\n// export default Reactusereducer;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// //==================================================\r\n\r\n\r\n\r\n// // import { useReducer, useState } from \"react\";\r\n// // import { useNavigate } from \"react-router\";\r\n\r\n// // const init = {\r\n// //     // for loginAll table\r\n// //     uname: \"\",\r\n// //     password: \"\",\r\n// //     role: \"Ambulance\",\r\n\r\n// //     drivername: \"\",\r\n// //     aregno: \"\",\r\n// //     avehicalno: \"\",\r\n// //     email: \"\",\r\n// //     mono: \"\",\r\n// //     website: \"\",\r\n// //     state: \"\",\r\n// //     city: \"\",\r\n// //     pincode: \"\",\r\n// //     landmark: \"\",\r\n// //     //  availablestatus: \"\",\r\n// //     ac_status: 1\r\n\r\n// // }\r\n\r\n// // const reducer = (state, action) => {\r\n// //     switch (action.type) {\r\n// //         case 'update':\r\n// //             return {\r\n// //                 ...state, [action.field]: action.val\r\n// //             };\r\n// //         case 'clear':\r\n// //             return init;\r\n// //     }\r\n\r\n// // }\r\n\r\n// // // export default function AmbulanceRegisForm1()\r\n// // let Reactusereducer = () => {\r\n// //     const [ambulancesignup, dispatch] = useReducer(reducer, init);\r\n\r\n// //     let navigate = useNavigate();\r\n// //     const [sucess, setSucess] = useState(\"false\");\r\n\r\n// //     //when click on butoon this fun get called\r\n// //     const hancelClick = (e) => {\r\n// //         e.preventDefault()\r\n// //         // const ambulanceregistraion={uname, password,role, drivername,aregno,avehicalno,email,mono,website,\r\n// //         // state,city,pincode,landmark,availablestatus,ac_status}\r\n// //         console.log(\"hi\");\r\n// //         console.log(ambulancesignup);\r\n// //         console.log(\"hi\");\r\n\r\n// //         fetch(\"http://localhost:8080/ambulancesignup\",\r\n// //             {\r\n// //                 method: \"POST\",\r\n// //                 headers: { \"Content-type\": \"application/json\" },\r\n// //                 body: JSON.stringify(ambulancesignup)\r\n// //             }).then(res => { if(res){\r\n// //                 if(res.status ==200){\r\n// //                     // console.log(\"Success\");\r\n// //                     alert(\"Register/SignUp Sucessfully!!!\");\r\n// //                     navigate('/login');\r\n\r\n// //                 }\r\n// //                 else{\r\n// //                     // console.log(\"fail\");\r\n// //                     alert(\"Register Fail--------\")\r\n// //                 }\r\n// //             } } )\r\n// //             // .then( (data)=> setSucess(data))\r\n// //             //     if (sucess === true)\r\n// //             //             {\r\n// //             //                 alert(\"Register/SignUp Sucessfully!!!\");\r\n// //             //                 // Navigator(\"/login\");\r\n// //             //                 navigate('/login');\r\n// //             //             }\r\n// //             //         else\r\n// //             //         {\r\n// //             //             alert(\"Register Fail--------\")\r\n// //             //         }\r\n         \r\n// //             // .then((data) => {   console.log(data)\r\n// //                 // if (sucess === true)\r\n// //                 //     {\r\n// //                 //         alert(\"Register/SignUp Sucessfully!!!\");\r\n// //                 //         // Navigator(\"/login\");\r\n// //                 //         navigate('/login');\r\n// //                 //     }\r\n// //                 // else\r\n// //                 // {\r\n// //                 //     alert(\"Register Fail--------\")\r\n// //                 // }\r\n// //             // })\r\n\r\n// //         //     if (sucess === \"true\")\r\n// //         //     {\r\n// //         //         alert(\"Register/SignUp Sucessfully!!!\");\r\n// //         //         // Navigator(\"/login\");\r\n// //         //         navigate('/login');\r\n// //         //     }\r\n// //         // else\r\n// //         // {\r\n// //         //     alert(\"Register Fail--------\")\r\n// //         // }\r\n\r\n// //         // alert(\"Register/SignUp Sucessfully!!!\");\r\n// //         // // Navigator(\"/login\");\r\n// //         // navigate('/login');\r\n// //     }\r\n\r\n\r\n// //     // //fetch the data from api\r\n// //     // useEffect(() => {\r\n// //     //     fetch(\"http://localhost:8080/\")\r\n// //     //         .then(res => res.json())\r\n// //     //         .then((result) => {\r\n// //     //             setStudents(result);\r\n// //     //         }\r\n// //     //         )\r\n// //     // }, [])\r\n\r\n// //     //return method will return html to browser\r\n// //     return (\r\n\r\n// //         <div>\r\n// //             <form className=\"formInput container mt-5\">\r\n// //                 <div className=\"signup-form\">\r\n\r\n// //                     <h3 className=\"form-title\">Ambulance Register Form</h3>\r\n\r\n// //                     <div className=\"form-group\">\r\n\r\n// //                         <label >Enter Username</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"uname\" value={ambulancesignup.uname}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'uname', val: e.target.value }) }}\r\n// //                         />\r\n// //                     </div>\r\n\r\n// //                     <div className=\"form-group\">\r\n\r\n// //                         <label >Enter Password</label>\r\n// //                         <input type=\"password\" className=\"form-control\" name=\"password\" value={ambulancesignup.password}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'password', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Driver Name</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"drivername\" value={ambulancesignup.drivername}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'drivername', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Ambulance Registration Number</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\r\n\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     {/* <div className=\"form-group\">\r\n// //                         <label >Enter Ambulance Registration Number</label>\r\n// //                         <input type=\"text\"  className=\"form-control\" name=\"aregno\" value={ambulancesignup.aregno}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'aregno', val: e.target.value }) }}\r\n\r\n// //                         />\r\n\r\n// //                     </div> */}\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Ambulance (Vehical) Number</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"avehicalno\" value={ambulancesignup.avehicalno}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'avehicalno', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Your Email</label>\r\n// //                         <input type=\"email\" className=\"form-control\" name=\"email\" value={ambulancesignup.email}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'email', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Your Mobile Number</label>\r\n// //                         <input type=\"number\" className=\"form-control\" name=\"mono\" value={ambulancesignup.mono}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'mono', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Your Website (If having)</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"website\" value={ambulancesignup.website}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'website', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter State</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"state\" value={ambulancesignup.state}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'state', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter City</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"city\" value={ambulancesignup.city}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'city', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n\r\n\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter Pincode</label>\r\n// //                         <input type=\"number\" className=\"form-control\" name=\"pincode\" value={ambulancesignup.pincode}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'pincode', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n// //                     <div className=\"form-group\">\r\n// //                         <label >Enter landmark</label>\r\n// //                         <input type=\"text\" className=\"form-control\" name=\"landmark\" value={ambulancesignup.landmark}\r\n// //                             onChange={(e) => { dispatch({ type: 'update', field: 'landmark', val: e.target.value }) }}\r\n// //                         />\r\n\r\n// //                     </div>\r\n// //                     <div className=\"form-group\">\r\n// //                         <button className=\"btn btn-primary btn-blob\" onClick={hancelClick} >Submit</button>\r\n// //                         <span style={{ padding: '20px' }}></span>\r\n// //                         <input type=\"button\" className=\"btn btn-primary btn-blob\" value='reset' onClick={(e) => { dispatch({ type: 'clear' }) }} />\r\n\r\n// //                     </div>\r\n// //                 </div>\r\n// //             </form>\r\n\r\n// //             {/* {JSON.stringify(ambulancesignup)} */}\r\n\r\n// //         </div>\r\n\r\n// //     );\r\n\r\n// // }\r\n// // export default Reactusereducer;\r\n\r\n"],"mappingso},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dipendra\\\\Desktop\\\\prj imgs\\\\Landing pg\\\\reacttemplate\\\\src\\\\componant\\\\LoginForm.js\",\n    _s = $RefreshSig$();\n\nimport './Form.css';\nimport React, { Component, useReducer, useState } from \"react\";\nimport { json, useNavigate } from 'react-router-dom';\nimport mystore from '../storeandreducer/store';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst init = {\n  uname: \"\",\n  password: \"\"\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case 'update':\n      return { ...state,\n        [action.field]: action.val\n      };\n\n    case 'clear':\n      return init;\n  }\n};\n\nlet LoginForm = () => {\n  _s();\n\n  const [luser, setLuser] = useReducer(reducer, init);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  let state = {};\n\n  const handelLogin = e => {\n    e.preventDefault();\n    console.log(luser);\n    fetch(\"http://localhost:8080/login\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(luser)\n    }).then(res => res.text()).then(data => {\n      if (data.length != 0) {\n        // assign to satate\n        console.log(\"-------\");\n        console.log(state);\n        console.log(\"-------\");\n        state = JSON.parse(data);\n        console.log(\"********\");\n        console.log(state);\n        localStorage.setItem(\"loginInfo\", JSON.stringify(state));\n        localStorage.setItem(\"isLogin\", true);\n        setError(\"Login sucess!!\");\n\n        if (state.lid.role == \"ambulance\" || state.lid.role == \"Ambulance\") {\n          console.log(\"go to Hospital Ambulance\"); // mystore.dispatch({type:\"LOGGEDIN\"});\n\n          navigate(\"/ambulanceprofilepg1\");\n        } else if (state.lid.role === \"hospital\" || state.lid.role === \"Hospital\") {\n          console.log(\"go to Hospital profile\");\n        }\n\n        navigate(\"/hospitalprofilepg\"); // if(state.lid.role===\"patient\"|| state.lid.role===\"Patient\")\n        //     history.pushState(\"/patientprofilepg\")\n        // if(state.lid.role===\"ambulance\"|| state.lid.role===\"Ambulance\")\n        //     history.pushState(\"/Ambulanceprofilepg\")\n      } else {\n        setError(\"Wrong userName/Password!!\");\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"form\",\n      className: \"container mt-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"form\",\n        className: \"formInput\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-left\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              className: \"form-control \",\n              placeholder: \"Enter user name\",\n              name: \"uname\",\n              onChange: u => {\n                setLuser({\n                  type: 'update',\n                  field: 'uname',\n                  val: u.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"form-control \",\n              placeholder: \"Enter password\",\n              name: \"password\",\n              onChange: u => {\n                setLuser({\n                  type: 'update',\n                  field: 'password',\n                  val: u.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"form\",\n            type: \"submit\",\n            className: \"btn btn-primary \",\n            onClick: handelLogin,\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Forgot \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"#\",\n              children: \"password?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Not User? \", /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/signup\",\n              children: \" Register \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(LoginForm, \"CfhqsXdbm4xWjUP7nHeCZ9TGxiw=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginForm;\nexport default LoginForm; //********corerct code but not maintian local storage here */\n// import './Form.css';\n// import React, { Component, useReducer } from \"react\";\n// const init = {\n//     uname: \"\",\n//     password: \"\",\n// };\n// const reducer = (state, action) => {\n//     switch (action.type) {\n//         case 'update': return { ...state, [action.field]: action.val };\n//         case 'clear': return init;\n//     }\n// }\n// let LoginForm = () => {\n//     const [luser, setLuser] = useReducer(reducer, init);\n//     return (\n//         <>\n//             <form id='form' className=\"container mt-5\" action=\"http://localhost:8080/login\" method=\"post\">\n//                 <div id='form' className=\"formInput\">\n//                     <h3>Sign In</h3>\n//                     <div className='text-left'>\n//                         <div>\n//                             <label >User ID</label>\n//                             <input type=\"text\" className=\"form-control \" placeholder=\"Enter user name\" name=\"uname\"\n//                                 onChange={(u) => { setLuser({ type: 'update', field: 'uname', val: u.target.value }) }} />\n//                         </div>\n//                         <div>\n//                             <label>Password</label>\n//                             <input type=\"password\" className=\"form-control \" placeholder=\"Enter password\" name=\"password\"\n//                                 onChange={(u) => { setLuser({ type: 'update', field: 'password', val: u.target.value }) }} />\n//                         </div>\n//                         {/* <div className=\"form-group\">\n//                             <div className=\"custom-control custom-checkbox\">\n//                                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\n//                                 <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\n//                             </div>\n//                         </div> */}\n//                         <button id='form' type=\"submit\" className=\"btn btn-primary \">Login</button>\n//                         <div>\n//                             Forgot <a href=\"#\">password?</a>\n//                         </div>\n//                         <div>\n//                             Not User? <a href=\"/signup\"> Register </a>\n//                         </div>\n//                     </div>\n//                 </div>\n//             </form>\n//         </>\n//     );\n// }\n// export default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","Component","useReducer","useState","json","useNavigate","mystore","init","uname","password","reducer","state","action","type","field","val","LoginForm","luser","setLuser","error","setError","navigate","handelLogin","e","preventDefault","console","log","fetch","method","headers","body","JSON","stringify","then","res","text","data","length","parse","localStorage","setItem","lid","role","u","target","value"],"sources":["C:/Users/Dipendra/Desktop/prj imgs/Landing pg/reacttemplate/src/componant/LoginForm.js"],"sourcesContent":["\r\nimport './Form.css';\r\nimport React, { Component, useReducer, useState } from \"react\";\r\nimport { json, useNavigate } from 'react-router-dom';\r\nimport mystore from '../storeandreducer/store';\r\n\r\nconst init = {\r\n    uname: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'update': return { ...state, [action.field]: action.val };\r\n        case 'clear': return init;\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\nlet LoginForm = () => {\r\n    const [luser, setLuser] = useReducer(reducer, init);\r\n    const [error, setError] =useState(\"\");\r\n    const navigate=useNavigate();\r\n    let state={};\r\n\r\n    const handelLogin = (e) => {\r\n\r\n        e.preventDefault()\r\n        console.log(luser);\r\n\r\n        fetch(\"http://localhost:8080/login\",\r\n            {\r\n                method: \"POST\",\r\n                headers: { \"Content-type\": \"application/json\" },\r\n                body: JSON.stringify(luser),\r\n\r\n            }).then(res=> res.text())\r\n            .then(data=> { \r\n                        if(data.length!=0)\r\n                        {\r\n                            // assign to satate\r\n                            console.log(\"-------\")\r\n                            console.log(state)\r\n                            console.log(\"-------\")\r\n                            state=JSON.parse(data)\r\n                            console.log(\"********\")\r\n                            console.log(state)\r\n                            localStorage.setItem(\"loginInfo\",JSON.stringify(state))\r\n                            localStorage.setItem(\"isLogin\",true);\r\n                            setError(\"Login sucess!!\");\r\n\r\n                            if(state.lid.role==\"ambulance\" || state.lid.role==\"Ambulance\")\r\n                                {   console.log(\"go to Hospital Ambulance\")\r\n                                    // mystore.dispatch({type:\"LOGGEDIN\"});\r\n                                    navigate(\"/ambulanceprofilepg1\")\r\n                                }\r\n                            else if(state.lid.role===\"hospital\"|| state.lid.role===\"Hospital\")\r\n                            {\r\n                                console.log(\"go to Hospital profile\")\r\n                            }\r\n                                navigate(\"/hospitalprofilepg\")\r\n\r\n                            // if(state.lid.role===\"patient\"|| state.lid.role===\"Patient\")\r\n                            //     history.pushState(\"/patientprofilepg\")\r\n                            // if(state.lid.role===\"ambulance\"|| state.lid.role===\"Ambulance\")\r\n                            //     history.pushState(\"/Ambulanceprofilepg\")\r\n                        }\r\n                        else\r\n                        {\r\n                            setError(\"Wrong userName/Password!!\");\r\n                        }\r\n\r\n             })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <form id='form' className=\"container mt-5\">\r\n                <div id='form' className=\"formInput\">\r\n                    <h3>Sign In</h3>\r\n                    <div className='text-left'>\r\n                        <div>\r\n                            <label >User ID</label>\r\n                            <input type=\"text\" className=\"form-control \" placeholder=\"Enter user name\" name=\"uname\"\r\n                                onChange={(u) => { setLuser({ type: 'update', field: 'uname', val: u.target.value }) }} />\r\n                        </div>\r\n\r\n                        <div>\r\n                            <label>Password</label>\r\n                            <input type=\"password\" className=\"form-control \" placeholder=\"Enter password\" name=\"password\"\r\n                                onChange={(u) => { setLuser({ type: 'update', field: 'password', val: u.target.value }) }} />\r\n                        </div>\r\n\r\n                        <button id='form' type=\"submit\" className=\"btn btn-primary \" onClick={handelLogin}>Login</button>\r\n                        <p>{error}</p>\r\n\r\n                        <div>\r\n                            Forgot <a href=\"#\">password?</a>\r\n                        </div>\r\n                        <div>\r\n                            Not User? <a href=\"/signup\"> Register </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LoginForm;\r\n\r\n//********corerct code but not maintian local storage here */\r\n// import './Form.css';\r\n// import React, { Component, useReducer } from \"react\";\r\n\r\n// const init = {\r\n//     uname: \"\",\r\n//     password: \"\",\r\n// };\r\n\r\n// const reducer = (state, action) => {\r\n//     switch (action.type) {\r\n//         case 'update': return { ...state, [action.field]: action.val };\r\n//         case 'clear': return init;\r\n\r\n//     }\r\n// }\r\n// let LoginForm = () => {\r\n//     const [luser, setLuser] = useReducer(reducer, init);\r\n\r\n//     return (\r\n//         <>\r\n//             <form id='form' className=\"container mt-5\" action=\"http://localhost:8080/login\" method=\"post\">\r\n//                 <div id='form' className=\"formInput\">\r\n//                     <h3>Sign In</h3>\r\n//                     <div className='text-left'>\r\n//                         <div>\r\n//                             <label >User ID</label>\r\n//                             <input type=\"text\" className=\"form-control \" placeholder=\"Enter user name\" name=\"uname\"\r\n//                                 onChange={(u) => { setLuser({ type: 'update', field: 'uname', val: u.target.value }) }} />\r\n//                         </div>\r\n\r\n//                         <div>\r\n//                             <label>Password</label>\r\n//                             <input type=\"password\" className=\"form-control \" placeholder=\"Enter password\" name=\"password\"\r\n//                                 onChange={(u) => { setLuser({ type: 'update', field: 'password', val: u.target.value }) }} />\r\n//                         </div>\r\n\r\n//                         {/* <div className=\"form-group\">\r\n//                             <div className=\"custom-control custom-checkbox\">\r\n//                                 <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n//                                 <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n//                             </div>\r\n//                         </div> */}\r\n\r\n//                         <button id='form' type=\"submit\" className=\"btn btn-primary \">Login</button>\r\n\r\n//                         <div>\r\n//                             Forgot <a href=\"#\">password?</a>\r\n//                         </div>\r\n//                         <div>\r\n//                             Not User? <a href=\"/signup\"> Register </a>\r\n//                         </div>\r\n//                     </div>\r\n//                 </div>\r\n//             </form>\r\n//         </>\r\n//     );\r\n// }\r\n\r\n// export default LoginForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}